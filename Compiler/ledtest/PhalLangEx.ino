/* Phal AutoGenerated .ino file 
*  Created 18-05-2018
*/

#include "Lightbulb.h" 
#include "TemperatureSensor.h" 
#include "Motor.h" 
#include "PhalGroup.h"
#include "PhalList.h"
float komma;
int notkomma;
Lightbulb *l;
TemperatureSensor *ls;
Motor *mot;
bool satan;
bool god;
bool alive;
bool dead;
int boob;
float floater;
PhalList<bool> *bla = new PhalList<bool>();
PhalGroup *testgroup = new PhalGroup();
bool test;
PhalList<bool> *gah = new PhalList<bool>();
void setup(){ 
komma = 2.53;
notkomma = 2;
l = new Lightbulb(1);
ls = new TemperatureSensor(2);
mot = new Motor(3);
satan = true;
god = false;
alive = !true;
dead = false;
boob = 8008;
floater = 5;
bla->add(1 == 4);
bla->add(false);
bla->add(satan);
bla->add(alive);
dead = true;
testgroup->add(l);
testgroup->add(ls);
delay((32)*1000);
if(true == false){
dead = true;

}
else if(true){
dead = false;
}
else{
}for(int _i0 = 0; _i0 < 5; _i0++){
dead = true;
dead = false;
}for(int _i1 = 0; _i1 < 2; _i1++){
dead = true;
dead = false;
}for(int _i2 = 0; _i2 < 3; _i2++){
dead = true;
dead = false;
}while(!(boob > 9000 && dead == false || alive == false)){
boob += 500;
boob -= 200;
}
while(!(boob < 3000)){
boob -= 500;
boob += 200;
}
switch(boob < 3){
case true:
boob += 2;
boob -= 2;
break;
case false:
boob += 4;
boob += (2 + (4 - 2));
break;
default: 
boob = 2;
break;
}
floater = 5.2;
test = bla->get(2 + 2);
gah->add(false);
bla->add(true);
bla->remove(2);
bla = gah;
} 

void loop(){ 
if(true == false && false == false){
if(true == false && 21 > 30){
satan = false;
god = alive;

}
else if(god == alive){
satan = dead;
}
else if(satan == alive){
satan = dead;
}
else{
alive = false;
}
}
waitup(24);
nevergettingcalled(24, 13);
testgroup->on();
delay((2)*1000);
testgroup->off();
} 

bool listdiffer (bool bolleboll){
PhalList<int> *result = new PhalList<int>();
result->add(1);
result->add(2);
result->add(5);
result->add(34);
result->add(21);
PhalList<String> *john = new PhalList<String>();
john->add("hello");
john->add("goodbye");
john->add("itsa me mario");
result->add(11);
result->remove(3);
result->remove(1);
result->remove(2);
return true;
}
int waitup (int num){
int num1;
int num2;
num += 45;
num1 += 45;
return 42;
}
int nevergettingcalled (int num, int five){
int num1;
int num2;
num += 45;
num1 += 45;
if(num1 == 4){
num2 = 3;

}
else if(num < 3){
num = 4;
}
else if(five >= 3){
five = 2;
}
else{
num2 = num1;
}delay((2.5)*1000);
return 15;
}
