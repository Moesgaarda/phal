using asd
using morfae
using TeamWork
using Su24eljnknkjnxfdcfvgbhnjkhggcvbniughvbnm9iuhynkhgyhjbhnjikhlugygkygyfytfjgbjvgjtfjaWholesomeness

setup
{
number i := 1
number j := 2
text t := "This is a string"
bool b := true

lightbulb lb := pin 1
coffeeMachine cm := pin 2,3,4
temperatureSensor ts := pin 5

group numAndCoffee{
	i
	j
	cm
}
group everything{
	i
	j
	t
	b
	cm
	lb
	ts
	numAndCoffee
}

list number lstNum {5,2,4,5,1,23,2,asd + dsa}
add 2 to lstNum
add 2,3,4,6,7,8,2+4 to lstNum

lstNum += 23
fuu.bar := true
bar.foo := false
remove element 4 from lstNum
number a2 := get element 2 from lstNum
if(2=2) then {
} else if (2=2) then
{ if(asd) then{ } else if(booleanV) then {}
} 
else then {
	switch(a2){
	case 1: s := "asd"
	default: switch(a3){
		case 123: a := a +2 -3 
		default: 
		}
	}
}
switch(a3){
		case 123: a := a +2 -3 
		default: 
}

call MyFunc with (none)

loop 4 times {x := 3
}
	
loop until 2 +3 , increase asd by 4{
}

}
repeat
{
add 2 to lstNum
add 2,3,4,6,7,8,2+4 to lstNum

lstNum += 23
fuu.bar := true
bar.foo := false
remove element 4 from lstNum
a2 := get element 2 from lstNum
if(2=2) then {
} else if (2=2) then
{ if(asd) then{ } else if(booleanV) then {}
} 

else then {
	switch(a2){
	case 1: s := "asd"
	default: switch(a3){
		case 123: a := a +2 -3 
		default: 
		}
	}
}
switch(a3){
		case 123: a := a +2 -3 
		default: 
}

call MyFunc with (none)
call Myfunc2 with (a3)
call Myfunc2 with (12)
call Myfunc3 with (12, "asd")
}

define MyFunc with (none) returnType none
{}

define MyFunc2 with (number a) returnType bool{
	a2 := 2
	text t := "asdasd"
	return true
}
define MyFunc3 with (number a, text t) returnType list{
	a2 := 2
	text t := "asdasd"
	a3 := get element 2 from asd
	return lstNum
}



