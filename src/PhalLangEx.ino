/* Phal AutoGenerated .ino file 
*  Created 17-05-2018
*/

#include "Lightbulb.h" 
#include "TemperatureSensor.h" 
#include "Motor.h" 
#include "Group/Group.h"
#include "LinkedList/LinkedList.h"
float komma;
int notkomma;
Lightbulb *l(1);
TemperatureSensor *ls(2);
Motor *mot(3);
bool satan;
bool god;
bool alive;
bool dead;
int boob;
float floater;
LinkedList<bool> bla = LinkedList<bool>();
PhalGroup<Adt> testgroup = PhalGroup<Adt>(2);
bool test;
LinkedList<bool> gah = LinkedList<bool>();
void setup(){ 
komma = 2.53;
notkomma = 2;
l = LightBulb(Location: l 0 : c 0)ls = TemperatureSensor(Location: l 0 : c 0)mot = Motor(Location: l 0 : c 0)satan = true;
god = false;
alive = !true;
dead = false;
boob = 8008;
floater = 5;
bla.add(1 == 4);
bla.add(false);
bla.add(satan);
bla.add(alive);
dead = true;
testgroup.add(l);
testgroup.add(ls);
delay((32)*1000);
if(true == false){
dead = true;

}
else if(true){
dead = false;
}
else{
}for(int _i0 = 0; _i0 < 5; _i0++){
dead = true;
dead = false;
}for(int _i1 = 0; _i1 < 2; _i1++){
dead = true;
dead = false;
}for(int _i2 = 0; _i2 < 3; _i2++){
dead = true;
dead = false;
}while(!(boob > 9000 && dead == false || alive == false)){
boob += 500;
boob -= 200;
}
while(!(boob < 3000)){
boob -= 500;
boob += 200;
}
switch(boob < 3){
case true:
boob += 2;
boob -= 2;
break;
case false:
boob += 4;
boob += (2 + (4 - 2));
break;
default: 
boob = 2;
break;
}
floater = 5.2;
test = bla.get(2 + 2);
gah.add(false);
bla.add(true);
bla.remove(2);
bla = gah;
} 

void loop(){ 
if(true == false && false == false){
if(true == false && 21 > 30){
satan = false;
god = alive;

}
else if(god == alive){
satan = dead;
}
else if(satan == alive){
satan = dead;
}
else{
alive = false;
}
}
waitup(24);
waitufp(24, 13);
testgroup.on();
testgroup.off();
testgroup.off();
} 

LinkedList<bool> listdiffer (LinkedList<bool> bolleboll){
LinkedList<bool> result = LinkedList<bool>();
result.add(true);
result.add(false);
result.add(true);
result.add(false);
LinkedList<bool> john = LinkedList<bool>();
john.add(true);
john.add(false);
john.add(true);
john.add(false);
result.add(true);
result.remove(3);
result.remove(1);
result.remove(2);
return result;
}
int waitup (int num){
int num1;
int num2;
num += 45;
num1 += 45;

}
int waitufp (int num, int five){
int num1;
int num2;
num += 45;
num1 += 45;
if(num1 == 4){
num2 = 3;

}
else{
num2 = num1;
}delay((2.5)*1000);
return 15;
}
